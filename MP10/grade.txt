Compilation Results:
********************

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
+5: load_tuples: nodes match

gv_tuples test: 5 pts total
Test 2: gv
+5: gv_tuples

set_tuples test: 35 pts total
Test 3: set
+5: set_tuples: delete node at tail
+5: set_tuples: add node at head
+5: set_tuples: add node in the middle
+5: set_tuples: add node at tail
+5: set_tuples: delete node at head
+5: set_tuples: delete node middle
+5: set_tuples: delete node at tail

add_tuples test: 10 pts total
Test 4: add
 +10: add_tuples pass

mult_tuples test: 15 pts total
Test 5: mult
 +15: mult_tuples pass

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts

10
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==14152== Memcheck, a memory error detector
==14152== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==14152== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==14152== Command: ./test0 7
==14152== 
==14152== Invalid write of size 4
==14152==    at 0x401D0E: add_tuples (sparsemat.c:260)
==14152==    by 0x4010D0: main (test0.c:410)
==14152==  Address 0x51f5508 is 0 bytes after a block of size 8 alloc'd
==14152==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==14152==    by 0x401CEB: add_tuples (sparsemat.c:256)
==14152==    by 0x4010D0: main (test0.c:410)
==14152== 
==14152== Invalid write of size 8
==14152==    at 0x401D19: add_tuples (sparsemat.c:261)
==14152==    by 0x4010D0: main (test0.c:410)
==14152==  Address 0x51f5510 is 8 bytes after a block of size 8 alloc'd
==14152==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==14152==    by 0x401CEB: add_tuples (sparsemat.c:256)
==14152==    by 0x4010D0: main (test0.c:410)
==14152== 
==14152== Invalid write of size 8
==14152==    at 0x401D53: add_tuples (sparsemat.c:270)
==14152==    by 0x4010D0: main (test0.c:410)
==14152==  Address 0x51f5510 is 8 bytes after a block of size 8 alloc'd
==14152==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==14152==    by 0x401CEB: add_tuples (sparsemat.c:256)
==14152==    by 0x4010D0: main (test0.c:410)
==14152== 
==14152== 
==14152== Process terminating with default action of signal 15 (SIGTERM)
==14152==    at 0x401D40: add_tuples (sparsemat.c:267)
==14152==    by 0x4010D0: main (test0.c:410)
==14152== 
==14152== HEAP SUMMARY:
==14152==     in use at exit: 75,518,840 bytes in 3,146,619 blocks
==14152==   total heap usage: 3,146,621 allocs, 2 frees, 75,519,976 bytes allocated
==14152== 
==14152== LEAK SUMMARY:
==14152==    definitely lost: 48 bytes in 2 blocks
==14152==    indirectly lost: 12,627,864 bytes in 526,161 blocks
==14152==      possibly lost: 0 bytes in 0 blocks
==14152==    still reachable: 62,890,928 bytes in 2,620,456 blocks
==14152==         suppressed: 0 bytes in 0 blocks
==14152== Rerun with --leak-check=full to see details of leaked memory
==14152== 
==14152== For counts of detected and suppressed errors, rerun with: -v
==14152== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Grade:
******
Late submission: 6
Functionality: 85
Comments and Style: 
Intro paragraph: 
Total: 
